#version 430 core

layout(local_size_x = 256) in;

layout (std430, binding = 0) buffer Pos {
    vec2 Positions[];
};

layout (std430, binding = 1) buffer Vel {
    vec2 Velocities[];
};

uniform float dt;
uniform vec2 gridSize;
uniform vec2 windowSize;
uniform float restitution;
uniform uint numParticles;

// (window height)
// y
// ^
// |
// |______> x (window width)

void main() {
    uint index = gl_GlobalInvocationID.x;

    if (index >= numParticles) {
        return;
    }

    Positions[index] += Velocities[index] * dt;

    if (Positions[index].x < 0.0) {
        Positions[index].x = 0.0;
        Velocities[index].x = -Velocities[index].x * restitution;
    }
    if (Positions[index].x > windowSize.x) {
        Positions[index].x = windowSize.x;
        Velocities[index].x = -Velocities[index].x * restitution;
    }
    if (Positions[index].y < 0.0) {
        Positions[index].y = 0.0;
        Velocities[index].y = -Velocities[index].y * restitution;
    }
    if (Positions[index].y > windowSize.y) {
        Positions[index].y = windowSize.y;
        Velocities[index].y = -Velocities[index].y * restitution;
    }
}
